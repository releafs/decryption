name: Image Processing Pipeline

on:
  # Trigger on push to main branch or when a file is pushed to the input directory
  push:
    branches:
      - main
    paths:
      - 'decryption/input/**'  # Trigger when a file is pushed to 'decryption/input/'

jobs:
  process-images:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Allow pushing changes to the repository

    steps:
    # Step 1: Check out the repository
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        persist-credentials: true  # Ensure Git credentials are available

    # Step 2: Cache pip dependencies
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # Step 3: Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    # Step 4: Install dependencies (only if not cached)
    - name: Install Dependencies
      run: |
        pip install -r requirements.txt

    # Step 5: Ensure the input directory exists before running any scripts
    - name: Create input directory if missing
      run: mkdir -p decryption/input  # Create the input directory if it doesn't exist

    # Step 6: Debugging - List files in input directory to confirm they're present
    - name: Check input directory for PNGs
      run: |
        echo "Checking input directory for PNGs:"
        ls -la decryption/input/

    # Step 7: Run the main processing scripts (No delay)
    - name: Run processing scripts
      run: |
        python scripts/script1.py
        python scripts/script2.py
        python scripts/script3.py

    # Step 8: Verify if the output file exists and skip if it doesn't
    - name: Verify output file exists
      run: |
        if [ ! -f "process/merged_data_with_metadata.csv" ]; then
          echo "Output file not found!"
          exit 1
        else
          echo "Output file found!"
        fi

    # Step 9: Remove local file, pull from remote, commit and push processed results
    - name: Remove, pull, and push processed result
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        rm -f process/merged_data_with_metadata.csv || true  # Ensure the local file is removed to avoid merge conflicts
        git pull origin main --rebase || true  # Pull the latest changes from the remote repository
        if [ -f "process/merged_data_with_metadata.csv" ]; then  # Check if the file exists after processing
          git add process/merged_data_with_metadata.csv
          git diff --cached --quiet || git commit -m "Add processed result for ${{ github.sha }}"
          git push
        else
          echo "No processed file to commit."
          exit 1
        fi

    # Step 10: Upload the artifact with a unique name including commit SHA
    - name: Upload processed result as artifact
      uses: actions/upload-artifact@v4
      with:
        name: processed-results-${{ github.sha }}
        path: process/merged_data_with_metadata.csv

    # Step 11: Clean up process directory (Optional if needed)
    - name: Clean up process directory
      run: rm -rf process/*

    # Step 12: Run script4.py to delete PNG files and input directory after processing
    - name: Delete input files and directory after processing
      run: python scripts/script4.py  # This deletes all PNG files and the input directory after processing
