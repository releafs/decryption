name: Image Processing Pipeline

on:
  push:
    paths:
      - 'decryption/input/**'  # Trigger when a file is pushed to 'decryption/input/'

jobs:
  process-images:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Allow pushing changes to the repository

    steps:
    # Step 1: Check out the repository
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        persist-credentials: true  # Ensure Git credentials are available

    # Step 2: Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    # Step 3: Install dependencies
    - name: Install Dependencies
      run: |
        pip install -r requirements.txt

    # Step 4: Ensure the input directory exists before running any scripts
    - name: Create input directory if missing
      run: mkdir -p decryption/input  # Create the input directory if it doesn't exist

    # Step 5: Debugging - List files in input directory to confirm PNG existence
    - name: Check input directory for PNGs
      run: |
        echo "Checking input directory for PNGs:"
        ls -la decryption/input/

    # Step 6: Run script1.py
    - name: Run script1.py
      run: python scripts/script1.py

    # Step 7: Ensure the process directory exists and list files
    - name: List files after script1.py
      run: ls -la process/

    # Step 8: Run script2.py (ensure input directory exists)
    - name: Run script2.py
      run: |
        mkdir -p decryption/input  # Ensure input directory exists
        python scripts/script2.py

    # Step 9: Run script3.py
    - name: Run script3.py
      run: python scripts/script3.py

    # Step 10: Debugging - Print generated files and their contents
    - name: List files and display contents in process directory before upload
      run: |
        ls -la process/
        echo "Contents of decrypted_data_with_binary.csv:"
        cat process/decrypted_data_with_binary.csv
        echo "Contents of merged_data_with_metadata.csv:"
        cat process/merged_data_with_metadata.csv

    # Step 11: Verify if the output file exists
    - name: Verify output file exists
      run: |
        if [ ! -f "process/merged_data_with_metadata.csv" ]; then
          echo "Output file not found!"
          exit 1
        else
          echo "Output file found!"
        fi

    # Step 12: Stage and commit if changes exist (including deletions)
    - name: Stage and commit if changes exist
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        git add -A process/ || true  # Stage all changes in process/, including deletions
        if git diff --cached --quiet; then
          echo "No changes to commit."
        else
          git commit -m "Add processed result"
          git push
        fi

    # Step 13: Upload the artifact (merged_data_with_metadata.csv) with overwrite
    - name: Upload processed result as artifact
      uses: actions/upload-artifact@v4
      with:
        name: processed-results
        path: process/merged_data_with_metadata.csv
        overwrite: true  # Ensure that we overwrite the old artifact

    # Step 14: Run script4.py to delete PNG files
    - name: Delete Uploaded PNGs
      run: python scripts/script4.py

    # Step 15: Clean up process directory
    - name: Clean up process directory
      run: rm -rf process/*
